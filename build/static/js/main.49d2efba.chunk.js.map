{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/quotes/QuoteList.module.css","components/comments/NewCommentForm.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/UI/LoadingSpinner.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","Pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","Pages/NewQuotes.js","Pages/NotFound.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","Pages/QuotesDetails.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","classes","header","logo","style","textDecoration","to","nav","activeClassName","active","Layout","props","main","children","QuoteItem","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","mainlabel","sorting","onClick","push","list","map","quote","NoQuotesFound","noquotes","LoadingSpinner","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","useEffect","length","Card","card","QuoteForm","useState","isFocused","setIsFocused","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuotes","NotFound","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","lenght","HighlightedQuote","QuotesDetails","params","match","useRouteMatch","path","exact","App","ReactDOM","render","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,6BAA6B,IAAM,4BAA4B,OAAS,iC,gBCAzID,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,iBCArID,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,UAAY,+B,gBCAlGD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,sBCApJD,EAAOC,QAAU,CAAC,KAAO,uB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,0B,gBCAzBD,EAAOC,QAAU,CAAC,SAAW,kC,gBCA7BD,EAAOC,QAAU,CAAC,QAAU,kC,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,KAAO,4B,gBCAzBD,EAAOC,QAAU,CAAC,SAAW,iC,gBCA7BD,EAAOC,QAAU,CAAC,MAAQ,kC,8ICqBXC,EAnBQ,WACnB,OAAO,yBAAQC,UAAWC,IAAQC,OAA3B,UAEH,cAAC,IAAD,CAAUF,UAAWC,IAAQE,KAAMC,MAAO,CAAEC,eAAgB,QAC5DC,GAAG,UADH,mBAEA,qBAAKN,UAAWC,IAAQM,IAAxB,SACI,+BACI,6BACI,cAAC,IAAD,CAASD,GAAG,UAAUE,gBAAiBP,IAAQQ,OAA/C,0BAEJ,6BACI,cAAC,IAAD,CAASH,GAAG,cAAcE,gBAAiBP,IAAQQ,OAAnD,sC,iBCALC,EATA,SAACC,GACZ,OAAQ,eAAC,WAAD,WACJ,cAAC,EAAD,IACA,sBAAMX,UAAWC,IAAQW,KAAzB,SACKD,EAAME,e,iBCUJC,EAhBG,SAACH,GACjB,OACE,qBAAIX,UAAWC,IAAQc,KAAvB,UACE,mCACE,qCACE,4BAAIJ,EAAMK,SAEZ,qCAAaL,EAAMM,YAErB,cAAC,IAAD,CAAMjB,UAAU,MAAMM,GAAE,kBAAaK,EAAMO,IAA3C,iC,iBCyCSC,EApCG,SAACR,GACjB,IAXkBS,EAAQC,EAWpBC,EAASC,cACTC,EAAWC,cAIXC,EAAiD,QADnC,IAAIC,gBAAgBH,EAASI,QACVC,IAAI,QACrCC,GAjBYV,EAiBcT,EAAMS,OAjBZC,EAiBoBK,EAhBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAmBxC,OACE,eAAC,WAAD,WACE,8BACE,oBAAIlB,UAAWC,IAAQiC,UAAvB,+CAEF,qBAAKlC,UAAWC,IAAQkC,QAAxB,SACE,yBAAQC,QAXe,WAC3Bd,EAAQe,KAAM,iBAAmBX,EAAqB,OAAS,SAU3D,kBAA6CA,EAAqB,aAAe,iBAEnF,oBAAI1B,UAAWC,IAAQqC,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVD,OAAQuB,EAAMvB,OACdD,KAAMwB,EAAMxB,MAHPwB,EAAMtB,a,iBC5BRuB,EAXO,WACpB,OACE,sBAAKzC,UAAWC,IAAQyC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAM1C,UAAU,MAAMM,GAAG,cAAzB,6B,iBCDSqC,EAJQ,WACrB,OAAO,qBAAK3C,UAAWC,IAAQ2C,W,uCCDjC,SAASC,EAAYC,EAAOC,GAC1B,MAAoB,SAAhBA,EAAOC,KACF,CACLC,KAAM,KACNC,MAAO,KACPC,OAAQ,WAIQ,YAAhBJ,EAAOC,KACF,CACLC,KAAMF,EAAOK,aACbF,MAAO,KACPC,OAAQ,aAIQ,UAAhBJ,EAAOC,KACF,CACLC,KAAM,KACNC,MAAOH,EAAOM,aACdF,OAAQ,aAILL,EAgCMQ,MA7Bf,SAAiBC,GAA4C,IAA3BC,EAA0B,wDAC1D,EAA8BC,qBAAWZ,EAAa,CACpDM,OAAQK,EAAmB,UAAY,KACvCP,KAAM,KACNC,MAAO,OAHT,mBAAOQ,EAAP,KAAkBC,EAAlB,KAMMC,EAAcC,sBAAW,uCAC7B,WAAgBC,GAAhB,eAAAC,EAAA,6DACEJ,EAAS,CAAEX,KAAM,SADnB,kBAG+BO,EAAgBO,GAH/C,OAGUV,EAHV,OAIIO,EAAS,CAAEX,KAAM,UAAWI,iBAJhC,gDAMIO,EAAS,CACPX,KAAM,QACNK,aAAc,KAAMW,SAAW,0BARrC,yDAD6B,sDAa7B,CAACT,IAGH,OAAO,aACLK,eACGF,ICvDDO,EAAkB,iDAEjB,SAAeC,IAAtB,+B,4CAAO,oCAAAH,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,iBADvB,cACCG,EADD,gBAEcA,EAASC,OAFvB,UAECpB,EAFD,OAIAmB,EAASE,GAJT,sBAKG,IAAIC,MAAMtB,EAAKe,SAAW,2BAL7B,OAUL,IAAWQ,KAFLC,EAAoB,GAERxB,EACVyB,EADgB,aAEpBxD,GAAIsD,GACDvB,EAAKuB,IAGVC,EAAkBpC,KAAKqC,GAhBpB,yBAmBED,GAnBF,6C,sBAsBA,SAAeE,EAAtB,kC,4CAAO,WAA8BC,GAA9B,mBAAAb,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,mBAA8BW,EAA9B,UADvB,cACCR,EADD,gBAEcA,EAASC,OAFvB,UAECpB,EAFD,OAIAmB,EAASE,GAJT,sBAKG,IAAIC,MAAMtB,EAAKe,SAAW,0BAL7B,cAQCa,EARD,aASH3D,GAAI0D,GACD3B,GAVA,kBAaE4B,GAbF,6C,sBAgBA,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,iBAAAhB,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,gBAAmC,CAC7De,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,sBALf,cACChB,EADD,gBAQcA,EAASC,OARvB,UAQCpB,EARD,OAUAmB,EAASE,GAVT,sBAWG,IAAIC,MAAMtB,EAAKe,SAAW,2BAX7B,gCAcE,MAdF,4C,sBAiBA,SAAeqB,EAAtB,kC,4CAAO,WAA0BvB,GAA1B,iBAAAC,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,qBAAgCH,EAAYc,QAA5C,SAA4D,CACtFI,OAAQ,OACRC,KAAMC,KAAKC,UAAUrB,EAAYwB,aACjCF,QAAS,CACP,eAAgB,sBALf,cACChB,EADD,gBAQcA,EAASC,OARvB,UAQCpB,EARD,OAUAmB,EAASE,GAVT,sBAWG,IAAIC,MAAMtB,EAAKe,SAAW,0BAX7B,gCAcE,CAAEuB,UAAWtC,EAAKuC,OAdpB,4C,sBAiBA,SAAeC,EAAtB,kC,4CAAO,WAA8Bb,GAA9B,uBAAAb,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,qBAAgCW,EAAhC,UADvB,cACCR,EADD,gBAGcA,EAASC,OAHvB,UAGCpB,EAHD,OAKAmB,EAASE,GALT,sBAMG,IAAIC,MAAMtB,EAAKe,SAAW,2BAN7B,OAWL,IAAWQ,KAFLkB,EAAsB,GAEVzC,EACV0C,EADgB,aAEpBzE,GAAIsD,GACDvB,EAAKuB,IAGVkB,EAAoBrD,KAAKsD,GAjBtB,yBAoBED,GApBF,6C,sBCnEP,IAmBeE,EAnBG,WACd,MAA0DtC,EAAQY,GAAc,GAAxEN,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OAAc0B,EAAnC,EAA6B5B,KAAmBC,EAAhD,EAAgDA,MAIhD,OAFA2C,qBAAU,WAAQjC,MAAiB,CAACA,IAErB,YAAXT,EACO,sBAAKnD,UAAU,WAAf,UAA0B,cAAC,EAAD,IAA1B,OAEPkD,EACO,mBAAGlD,UAAU,iBAAb,SAA+BkD,IAE3B,cAAXC,GAA4B0B,GAAsC,IAAvBA,EAAYiB,OAIvD,cAAC,EAAD,CAAW1E,OAAQyD,IAHZ,cAAC,EAAD,K,iBCbAkB,EAJF,SAACpF,GACZ,OAAO,qBAAKX,UAAWC,IAAQ+F,KAAxB,SAA+BrF,EAAME,Y,iBCyD/BoF,EArDG,SAACtF,GACjB,MAAkCuF,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACE,eAAC,WAAD,WAEE,cAAC,IAAD,CAAQE,KAAML,EAAWnC,QAAS,SAACxC,GAAD,MAAY,yEAChD,cAAC,EAAD,UACE,uBAAMiF,QAbc,WACtBL,GAAa,IAYsBpG,UAAWC,IAAQyG,KAAMC,SAxB9D,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBT,EAAeU,QAAQC,MACvCC,EAAcV,EAAaQ,QAAQC,MAIzCrG,EAAMuG,WAAW,CAAEjG,OAAQ6F,EAAe9F,KAAMiG,KAgB9C,UACGtG,EAAMwG,WACL,qBAAKnH,UAAWC,IAAQmH,QAAxB,SACE,cAAC,EAAD,MAIJ,sBAAKpH,UAAWC,IAAQoH,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOtE,KAAK,OAAO9B,GAAG,SAASqG,IAAKlB,OAEtC,sBAAKrG,UAAWC,IAAQoH,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUpG,GAAG,OAAOsG,KAAK,IAAID,IAAKhB,OAEpC,qBAAKvG,UAAWC,IAAQwH,QAAxB,SACE,wBAAQrF,QAzBiB,WAC/BgE,GAAa,IAwBoCpG,UAAU,MAArD,kCC3BK0H,EApBG,WACd,MAAgCpE,EAAQwB,GAAhClB,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OACf7B,EAAUC,cAEhBsE,qBAAU,WACS,cAAX1C,GAGA7B,EAAQe,KAAK,aAElB,CAACc,EAAQ7B,IAMZ,OACI,cAAC,EAAD,CAAW6F,UAAsB,YAAXhE,EAAsB+D,WALxB,SAACnC,GACrBnB,EAAYmB,OCdL4C,EAJE,WACb,OAAO,sBAAK3H,UAAU,WAAf,cAA2B,oD,wCC+CvB4H,GAzCQ,SAACjH,GACtB,IAAMkH,EAAiBvB,mBAEvB,EAAuChD,EAAQ+B,GAAvCzB,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OAAQD,EAA7B,EAA6BA,MAErB4E,EAAmBnH,EAAnBmH,eAERjC,qBAAU,WACO,cAAX1C,GAA2BD,GAC7B4E,MAED,CAAC3E,EAAQD,EAAO4E,IAEnB,IAAMC,EAAoB,SAACnB,GACzBA,EAAMC,iBAEN,IAAMI,EAAcY,EAAed,QAAQC,MAI3CpD,EAAY,CAAE0B,YAAa,CAAEtE,KAAMiG,GAAerC,QAASjE,EAAMiE,WAGnE,OACE,uBAAM5E,UAAWC,KAAQyG,KAAMC,SAAUoB,EAAzC,UACc,YAAX5E,GACC,qBAAKnD,UAAU,WAAf,SACE,cAAC,EAAD,MAGJ,sBAAKA,UAAWC,KAAQoH,QAASV,SAAUoB,EAA3C,UACE,uBAAOT,QAAQ,UAAf,0BACA,0BAAUpG,GAAG,UAAUsG,KAAK,IAAID,IAAKM,OAEvC,qBAAK7H,UAAWC,KAAQwH,QAAxB,SACE,wBAAQzH,UAAU,MAAlB,+B,oBChCOgI,GARK,SAACrH,GACnB,OACE,oBAAIX,UAAWC,KAAQc,KAAvB,SACE,4BAAIJ,EAAMK,U,oBCQDiH,GAVM,SAACtH,GACpB,OACE,oBAAIX,UAAWC,KAAQiI,SAAvB,SACGvH,EAAMuH,SAAS3F,KAAI,SAAC4F,GAAD,OAClB,cAAC,GAAD,CAA8BnH,KAAMmH,EAAQnH,MAA1BmH,EAAQjH,UCmDnBkH,GAjDE,WACf,MAA8ClC,oBAAS,GAAvD,mBAAOmC,EAAP,KAAwBC,EAAxB,KAGQ1D,EAFO2D,cAEP3D,QAER,EAAsDtB,EAAQmC,GAAtD7B,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OAAcqF,EAAnC,EAA6BvF,KAE7B4C,qBAAU,WACRjC,EAAYgB,KACX,CAACA,EAAShB,IAEb,IAQIsE,EAJEO,EAAsB5E,uBAAY,WACtCD,EAAYgB,KACX,CAAChB,EAAagB,IAgBjB,MAZe,YAAXzB,IACF+E,EAAY,qBAAKlI,UAAU,WAAf,SAA0B,cAAC,EAAD,OAGzB,cAAXmD,IAA2BqF,GAAkBA,EAAeE,OAAS,KACvER,EAAW,cAAC,GAAD,CAAcA,SAAUM,KAGtB,cAAXrF,GAA4BqF,GAA4C,IAA1BA,EAAe1C,SAC/DoC,EAAY,mBAAGlI,UAAU,WAAb,sCAIZ,0BAASA,UAAWC,KAAQiI,SAA5B,UACE,gDACEG,GACA,wBAAQrI,UAAU,MAAMoC,QA1BC,WAC7BkG,GAAmB,IAyBf,2BAIDD,GAAoB,cAAC,GAAD,CAAgBzD,QAASA,EAASkD,eAAgBW,IACtEP,M,oBCzCQS,GATU,SAAChI,GACxB,OACE,yBAAQX,UAAWC,KAAQuC,MAA3B,UACE,4BAAI7B,EAAMK,OACV,qCAAaL,EAAMM,aCyCV2H,GAjCO,WAClB,MAA0DtF,EAAQqB,GAAgB,GAA1Ef,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OAAc0B,EAAnC,EAA6B5B,KAAmBC,EAAhD,EAAgDA,MAC1C2F,EAASN,cACP3D,EAAYiE,EAAZjE,QACFkE,EAAQC,cAKd,OAHAlD,qBAAU,WACNjC,EAAYgB,KACb,CAAChB,EAAagB,IACF,YAAXzB,EACO,sBAAKnD,UAAU,WAAf,UAA0B,cAAC,EAAD,IAA1B,OAEPkD,EACO,mBAAGlD,UAAU,iBAAb,SAA+BkD,IAErC2B,EAAY7D,KAIT,gCACJ,cAAC,GAAD,CAAkBA,KAAM6D,EAAY7D,KAAMC,OAAQ4D,EAAY5D,SAC9D,cAAC,IAAD,CAAO+H,KAAMF,EAAME,KAAMC,OAAK,EAA9B,SACI,qBAAKjJ,UAAU,WAAf,SACI,cAAC,IAAD,CAAMA,UAAU,YAAYM,GAAE,kBAAauI,EAAOjE,QAApB,aAA9B,+BAGR,cAAC,IAAD,CAAOoE,KAAI,UAAKF,EAAME,KAAX,aAAX,SACI,cAAC,GAAD,SAXG,iDCEAE,OAxBf,WACE,OACE,cAAC,EAAD,UACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOF,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,IAAD,CAAU3I,GAAG,cAEf,cAAC,IAAD,CAAO0I,KAAK,UAAUC,OAAK,EAA3B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,mBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,YCnBRG,IAASC,OAAO,cAAC,IAAD,UAAe,cAAC,GAAD,MAAyBC,SAASC,eAAe,W","file":"static/js/main.49d2efba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__VQVRv\",\"logo\":\"MainNavigation_logo__1U2-v\",\"nav\":\"MainNavigation_nav__2Evsh\",\"active\":\"MainNavigation_active__75clO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__CvoQv\",\"loading\":\"QuoteForm_loading__34ZZJ\",\"control\":\"QuoteForm_control__1N_jZ\",\"actions\":\"QuoteForm_actions__3s2dn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3kyZS\",\"sorting\":\"QuoteList_sorting__1w36n\",\"mainlabel\":\"QuoteList_mainlabel__2PJRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3u7Zg\",\"loading\":\"NewCommentForm_loading__2r8Qz\",\"control\":\"NewCommentForm_control__3axVT\",\"actions\":\"NewCommentForm_actions__11FnC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2wltl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__Q9UKe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1G9sw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__3Gl4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2sBQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3oZ9g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2dhd6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__3vGEG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2p5-I\"};","import classes from \"./MainNavigation.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst MainNavigation = () => {\r\n    return <header className={classes.header}>\r\n        {/* <div className={classes.logo}>Great Quotes</div> */}\r\n        <NavLink  className={classes.logo} style={{ textDecoration: 'none' }}\r\n        to='/quotes'>Echo.</NavLink>\r\n        <nav className={classes.nav}>\r\n            <ul>\r\n                <li>\r\n                    <NavLink to='/quotes' activeClassName={classes.active}>All Quotes</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/new-quotes' activeClassName={classes.active}>Add New Quote</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </header>\r\n}\r\n\r\n\r\nexport default MainNavigation;","\r\nimport { Fragment } from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport classes from \"./Layout.module.css\";\r\n\r\nconst Layout = (props) => {\r\n    return (<Fragment>\r\n        <MainNavigation></MainNavigation>\r\n        <main className={classes.main}>\r\n            {props.children}\r\n        </main>\r\n    </Fragment>)\r\n};\r\n\r\nexport default Layout;","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n//sorting function\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history =useHistory();\n  const location = useLocation();\n\n  // built-in JS contructor in browser\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const ChangeSortingHandler = () => {\n    history.push( '/quotes?sort=' + (isSortingAscending ? 'desc' : 'asc'));\n    // Another way for above \n    // history.push( `${location.pathname}?sort=${(isSortingAscending ? 'desc' : 'asc')}`);\n  }\n  return (\n    <Fragment>\n      <div>\n        <h1 className={classes.mainlabel}>Share Your Inspirational Quotes</h1>\n      </div>\n      <div className={classes.sorting}>\n        <button onClick={ChangeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quotes'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://echo-14604-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from '../hooks/use-http'\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst AllQuotes = () => {\r\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(getAllQuotes, true);\r\n\r\n    useEffect(() => { sendRequest() }, [sendRequest]);\r\n\r\n    if (status === 'pending') {\r\n        return <div className=\"centered\"><LoadingSpinner /> </div>\r\n    }\r\n    if (error) {\r\n        return <p className=\"centered focus\">{error}</p>;\r\n    }\r\n    if (status === 'completed' && (!loadedQuote || loadedQuote.length === 0)) {\r\n        return <NoQuotesFound />\r\n    }\r\n    return (\r\n        <QuoteList quotes={loadedQuote} />\r\n    )\r\n};\r\n\r\nexport default AllQuotes;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport {Prompt} from 'react-router-dom'\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isFocused, setIsFocused] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler =() =>{\n    setIsFocused(true);\n  }\n\n  const finishedEnterDataHandler = () => {\n    setIsFocused(false);\n  }\n\n  return (\n    <Fragment>\n      {/* Prompt is imported from react-route-dom(it watch if we navigate away and show warning) */}\n      <Prompt when={isFocused} message={(location)=>'Are you sure you want to leave. All your entered data will be lost.'}/>\n    <Card>\n      <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishedEnterDataHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http'\r\nimport { addQuote } from '../lib/api';\r\nconst NewQuotes = () => {\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            //History hook helps in redirecting page after event\r\n\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history]);\r\n\r\n    const addQuoteHandler = (quoteData) => {\r\n        sendRequest(quoteData);\r\n\r\n    }\r\n    return (\r\n        <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}></QuoteForm>)\r\n};\r\n\r\nexport default NewQuotes;","const NotFound = () => {\r\n    return(<div className='centered'> <p>Page Not Found!</p></div>)\r\n}\r\n\r\nexport default NotFound;","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (<div className='centered'><LoadingSpinner></LoadingSpinner></div>);\n  }\n\n  if (status === 'completed' && (loadedComments || loadedComments.lenght > 0)) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = (<p className='centered'> No comments added yet.</p>);\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (<NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler} />)}\n      {comments}\n    </section>\n  );\n};\n\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","\r\nimport { Route, useParams, useRouteMatch } from \"react-router\";\r\nimport Comments from '../components/comments/Comments';\r\nimport { Link } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http'\r\nimport { getSingleQuote } from '../lib/api';\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\nconst QuotesDetails = () => {\r\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\r\n    const params = useParams();\r\n    const { quoteId } = params;\r\n    const match = useRouteMatch();\r\n        \r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n    if (status === 'pending') {\r\n        return <div className=\"centered\"><LoadingSpinner /> </div>\r\n    }\r\n    if (error) {\r\n        return <p className=\"centered focus\">{error}</p>;\r\n    }\r\n    if (!loadedQuote.text) {\r\n        return <p>No Quote Found.</p>\r\n    }\r\n\r\n    return (<div>\r\n        <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n        <Route path={match.path} exact>\r\n            <div className=\"centered\">\r\n                <Link className='btn--flat' to={`/quotes/${params.quoteId}/comments`}>Load Comments</Link>\r\n            </div>\r\n        </Route>\r\n        <Route path={`${match.path}/comments`}>\r\n            <Comments></Comments>\r\n        </Route>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default QuotesDetails;","import { Redirect, Route, Switch } from \"react-router\";\nimport Layout from \"./components/layout/Layout\";\nimport AllQuotes from \"./Pages/AllQuotes\";\nimport NewQuotes from \"./Pages/NewQuotes\";\nimport NotFound from \"./Pages/NotFound\";\nimport QuotesDetails from \"./Pages/QuotesDetails\";\n\n\nfunction App() {\n  return (\n    <Layout>\n    <Switch>\n      <Route path='/' exact>\n        <Redirect to='/quotes'></Redirect>\n      </Route>\n      <Route path='/quotes' exact>\n        <AllQuotes></AllQuotes>\n      </Route>      \n      <Route path='/quotes/:quoteId'>\n        <QuotesDetails></QuotesDetails>\n      </Route>\n      <Route path='/new-quotes'>\n        <NewQuotes></NewQuotes>\n      </Route>\n      <Route path='*'>\n        <NotFound/>\n      </Route>\n    </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}